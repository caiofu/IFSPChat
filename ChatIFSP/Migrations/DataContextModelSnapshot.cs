// <auto-generated />
using System;
using ChatIFSP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatIFSP.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChatIFSP.Models.Contatos", b =>
                {
                    b.Property<int>("idContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int>("idUsuarioContato")
                        .HasColumnType("int");

                    b.HasKey("idContato");

                    b.HasIndex("idUsuario");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("ChatIFSP.Models.Conversas", b =>
                {
                    b.Property<int>("idConversa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idConversa");

                    b.ToTable("Conversas");
                });

            modelBuilder.Entity("ChatIFSP.Models.Mensagens", b =>
                {
                    b.Property<int>("idMensagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataMensagem")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idConversa")
                        .HasColumnType("int");

                    b.Property<int>("idRemetente")
                        .HasColumnType("int");

                    b.Property<string>("mensagem")
                        .IsRequired()
                        .HasMaxLength(3500)
                        .HasColumnType("varchar(3500)");

                    b.Property<int>("statusMensagem")
                        .HasColumnType("int");

                    b.HasKey("idMensagem");

                    b.HasIndex("idConversa");

                    b.HasIndex("idRemetente");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("ChatIFSP.Models.Participantes", b =>
                {
                    b.Property<int>("idParticipante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("idConversa")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idParticipante");

                    b.HasIndex("idConversa");

                    b.HasIndex("idUsuario");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("ChatIFSP.Models.Usuarios", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("apelido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("foto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ChatIFSP.Models.Contatos", b =>
                {
                    b.HasOne("ChatIFSP.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ChatIFSP.Models.Mensagens", b =>
                {
                    b.HasOne("ChatIFSP.Models.Conversas", "Conversa")
                        .WithMany()
                        .HasForeignKey("idConversa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatIFSP.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("idRemetente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ChatIFSP.Models.Participantes", b =>
                {
                    b.HasOne("ChatIFSP.Models.Conversas", "Conversas")
                        .WithMany()
                        .HasForeignKey("idConversa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatIFSP.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversas");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
